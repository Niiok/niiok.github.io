<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Cs on Niiok's Blog</title><link>https://niiok.github.io/c/</link><description>Recent content in Cs on Niiok's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 01 Jan 1970 00:00:00 +0000</lastBuildDate><atom:link href="https://niiok.github.io/c/index.xml" rel="self" type="application/rss+xml"/><item><title>Array String</title><link>https://niiok.github.io/c/array_string/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://niiok.github.io/c/array_string/</guid><description> strlen() 1 2 3 4 5 6 7 8 9 int strlen (char s[]) { int i; i = 0; while ( s[i] != &amp;#39;\0&amp;#39; ) ++i; return i; } memset() 1 void* memset(char s[], char c, int n); place character c into first n characters of s, return s.</description></item><item><title>File</title><link>https://niiok.github.io/c/file/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://niiok.github.io/c/file/</guid><description>FILE
fopen
1 FILE* fopen (char* name, char* mode); used to openning file with file name name.
mode
&amp;ldquo;r&amp;rdquo; : read &amp;ldquo;w&amp;rdquo; : write (will be overwrited), (make new file if it doesn&amp;rsquo;t exist and possible) &amp;ldquo;a&amp;rdquo; : append (make new file if it doesn&amp;rsquo;t exist and possible) &amp;ldquo;rb&amp;rdquo; : binary-read &amp;ldquo;wb&amp;rdquo; : binary-write (will be overwrited), (make new file if it doesn&amp;rsquo;t exist and possible) &amp;ldquo;ab&amp;rdquo; : binary-append (make new file if it doesn&amp;rsquo;t exist and possible) getc</description></item><item><title>Intro</title><link>https://niiok.github.io/c/intro/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://niiok.github.io/c/intro/</guid><description>Introduction Writer prefer 1983 ANSI C (K&amp;amp;R 2nd). C was born for UNIX
C is machine independent C is simple and concise (even though program with it is complicated) Creator&amp;rsquo;s words
C is a general-purpose programming language which features economy of expression, modern control flow and data structures, and a rich set of operators.
C wears well as one&amp;rsquo;s experience with it grows.</description></item></channel></rss>