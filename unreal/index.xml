<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Unreals on Niiok's Blog</title><link>https://niiok.github.io/unreal/</link><description>Recent content in Unreals on Niiok's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 17 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://niiok.github.io/unreal/index.xml" rel="self" type="application/rss+xml"/><item><title>Unreal Network</title><link>https://niiok.github.io/unreal/network/</link><pubDate>Tue, 17 May 2022 00:00:00 +0000</pubDate><guid>https://niiok.github.io/unreal/network/</guid><description>Intro Unreal network system is based on Server-Client model. If developers consider about &amp;ldquo;Replication&amp;rdquo;, game can support both singleplayer and multiplayer. UE4 Clients can not communicate without Server (p2p is not currently supported) Struct Network Mode ENetMode NM_Standalone Authoritative : true Listening : false LocalPlayer : true NM_DedicatedServer Authoritative : true Listening : true LocalPlayer : false NM_ListenServer Authoritative : true Listening : true LocalPlayer : true NM_Client Authoritative : false Listening : false LocalPlayer : true NM_MAX Role, RemoteRole ENetRole ROLE_None not related with replication ROLE_SimulatedProxy copy of ROLE_Authority extrapolative-predicted with server values ROLE_AutonomousProxy copy of ROLE_Authority extrapolative-predicted with server values + local functions (e.</description></item><item><title>Unreal Kickstart - World Building</title><link>https://niiok.github.io/unreal/sjoerddejong/kickstart_world/</link><pubDate>Mon, 25 Apr 2022 16:31:05 +0900</pubDate><guid>https://niiok.github.io/unreal/sjoerddejong/kickstart_world/</guid><description>Intro and Philosophy History visual based complete toolset level centric started from level editor other tools added-on level editor, and then it called as engine UE1 (1997/1999) Called as UnrealEd1, UnrealEd2 BSP Brush focused Engine struct was formulated Actors, Viewport, Camera controls, toolbar&amp;hellip; Lighting rendered in viewport Event/Tag scripted Subtractive world (Skybox) UE2 (2002) Meshes added BSP-Mesh hybrid workflow Event/Tag scripted Subtractive world (Skybox) used Ctrl+S to subtract (prevent spam) UE3 (2006) Visual scripting (Kismet) added sub-editors added Matinee, Cascade, Material editor, etc Additive world (no Skybox) UE4&amp;rsquo;s structure was almost completed UE4 (2014) Blueprint added UI revamp 2nd generation sub-editors and tools Matinee and Cascade are replaced Sequencer, Sound cue editor, etc Unified interface with blueprint UE5 (2022) Reinforced sub-editors and open world support Chaos, AFPA, World Partition, etc Schematic-Schematic All required tools and sub-editors are part of the editor and engine.</description></item><item><title>Unreal Kickstart</title><link>https://niiok.github.io/unreal/sjoerddejong/kickstart/</link><pubDate>Sun, 24 Apr 2022 14:25:00 +0900</pubDate><guid>https://niiok.github.io/unreal/sjoerddejong/kickstart/</guid><description>About this kickstart Kickstart for giving Big picture perspective of UE4 Not a step-by-step walkthrough of how to use UE4 about what, why, terminology, logic, history plus advices and practises for beginners Composed with Philosophy and Intro Schematic Overview Advice Presenters Sjoerd De Jong Evangelism Lead Europe 20 Years experience with UE1-4 Anything content or Blueprint related except for Animation/Audio Mario Palmero 8 hours years experience with UE3/4 Programming, Tech Art and Animation Contents World Building Rendering Animation Engine Structure Programming Blueprint Character Material</description></item><item><title>UE5 New Features</title><link>https://niiok.github.io/unreal/ue5_new/</link><pubDate>Wed, 13 Apr 2022 18:16:26 +0900</pubDate><guid>https://niiok.github.io/unreal/ue5_new/</guid><description>Core Nanite Lumen Open World File per Actor World Partition Data Layer Level Instance Large World Coordinate</description></item><item><title>Unreal Subsystem</title><link>https://niiok.github.io/unreal/subsystem/</link><pubDate>Thu, 17 Mar 2022 23:42:05 +0900</pubDate><guid>https://niiok.github.io/unreal/subsystem/</guid><description>Intro Subsystem is handy and useful instance with various lifecycle. Every Subsystems declared as class will be instanced and called Inintialize() and Deinitialize() in proper time. Thanks to Subsystems, GameInstance don&amp;rsquo;t have to be over-responsible. (and other massive advantages) Subsystem variety UEngineSubsystem
Lifetime : StartUp() ~ ShutDown() Reference : GEngine-&amp;gt;GetEngineSubsystem&amp;lt;T&amp;gt;(); UEditorSubsystem
Lifetime : StartUp() ~ ShutDown() Reference : GEditor-&amp;gt;GetEditorSubsystem&amp;lt;T&amp;gt;(); UGameInstanceSubsystem</description></item><item><title>Android packaging</title><link>https://niiok.github.io/unreal/android_packaging/</link><pubDate>Mon, 14 Mar 2022 13:07:15 +0900</pubDate><guid>https://niiok.github.io/unreal/android_packaging/</guid><description>To package apk successfully via Android Studio (UE4.25~) First, follow this official document. Tips below may be useful if your Gradle spit errors out. (wrote in 2022 March with UE4.27.2) Check existence of these 2 files (Windows) Users/[User name]/AppData\Local\Android\Sdk\build-tools\[SDK version]/dx.bat Users/[User name]/AppData\Local\Android\Sdk\build-tools\[SDK version]/lib/dx.jar If they don&amp;rsquo;t exist, make symbolic links of d8.bat and d8.jar. You MUST enable AndroidDeviceProfileSelector and AndroidPermission plugins. Then execute [EngineFolder]/Engine/Extras/Android/SetupAndroid.* while UE4 and Android Studio are off.</description></item><item><title>Unreal basic</title><link>https://niiok.github.io/unreal/basic/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://niiok.github.io/unreal/basic/</guid><description>Unreal project If you want to study the API on your own; You should use that API as a user until you get used to it and read the header files. In every unreal code, they include &amp;ldquo;CoreMinimal.h&amp;rdquo; or &amp;ldquo;EngineMinimal.h&amp;rdquo; and those header files will be key to start studying.
Project hierarchy Config : project setting values. NEEDED-do not remove
Content : asset storage. NEEDED-do not remove</description></item></channel></rss>