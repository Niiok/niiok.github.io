<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>Unreal on Niiok's Blog</title><link>https://niiok.github.io/categories/unreal/</link><description>Recent content in Unreal on Niiok's Blog</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Thu, 17 Mar 2022 23:42:05 +0900</lastBuildDate><atom:link href="https://niiok.github.io/categories/unreal/index.xml" rel="self" type="application/rss+xml"/><item><title>Unreal Subsystem</title><link>https://niiok.github.io/unreal/subsystem/</link><pubDate>Thu, 17 Mar 2022 23:42:05 +0900</pubDate><guid>https://niiok.github.io/unreal/subsystem/</guid><description>Intro Subsystem is handy and useful instance with various lifecycle. Every Subsystems declared as class will be instanced and called Inintialize() and Deinitialize() in proper time. Thanks to Subsystems, GameInstance don&amp;rsquo;t have to be over-responsible. (and other massive advantages) Subsystem variety UEngineSubsystem
Lifetime : StartUp() ~ ShutDown() Reference : GEngine-&amp;gt;GetEngineSubsystem&amp;lt;T&amp;gt;(); UEditorSubsystem
Lifetime : StartUp() ~ ShutDown() Reference : GEditor-&amp;gt;GetEditorSubsystem&amp;lt;T&amp;gt;(); UGameInstanceSubsystem</description></item><item><title>Unreal Network</title><link>https://niiok.github.io/unreal/network/</link><pubDate>Wed, 16 Mar 2022 23:41:59 +0900</pubDate><guid>https://niiok.github.io/unreal/network/</guid><description>Intro Unreal network system is based on Server-Client model. If developers consider about &amp;ldquo;Replication&amp;rdquo;, game can support both single player and multiplayer. Network Mode NM_Standalone Authoritive : true Listening : false LocalPlayer : true NM_Client Authoritive : false Listening : false LocalPlayer : true NM_ListenServer Authoritive : true Listening : true LocalPlayer : true NM_DedicatedServer Authoritive : true Listening : true LocalPlayer : false Replication Role ROLE_None ROLE_Authority ROLE_SimulatedProxy ROLE_AutonomousProxy Replicate with property 1 2 3 4 5 6 7 8 UFUNCTION() void void_function(); UPROPERTY(Replicated) int SimpleReplicateProperty; UPROPERTY(ReplicatedUsing = void_function) int ReplicatePropertyCallsRepNotifies; Replicate with Function (RPC) 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 UFUNCTION(Server, Reliable, WithValidation) void FunctionThatCalledOnServer(); UFUNCTION(Client, Reliable, WithValidation) void FunctionThatCalledOnOwnerClient(); UFUNCTION(NetMulticast, Reliable, WithValidation) void FunctionThatCalledOnEveryActor(); void ClassName::FunctionThatCalledOnServer_Implementation() {} bool ClassName::FunctionThatCalledOnServer_Validation() {} void ClassName::FunctionThatCalledOnOwnerClient_Implementation() {} bool ClassName::FunctionThatCalledOnOwnerClient_Validation() {} void ClassName::FunctionThatCalledOnEveryActor_Implementation() {} bool ClassName::FunctionThatCalledOnEveryActor_Validation() {} You should set Reliable(TCP) or Unreliable(UDP) specifier on RPC&amp;rsquo;s UFUNCTION().</description></item><item><title>Android packaging</title><link>https://niiok.github.io/unreal/android_packaging/</link><pubDate>Mon, 14 Mar 2022 13:07:15 +0900</pubDate><guid>https://niiok.github.io/unreal/android_packaging/</guid><description>To package apk successfully via Android Studio (UE4.25~) First, follow this official document. Tips below may be useful if your Gradle spit errors out. (wrote in 2022 March with UE4.27.2) Check existence of these 2 files (Windows) Users/[User name]/AppData\Local\Android\Sdk\build-tools\[SDK version]/dx.bat Users/[User name]/AppData\Local\Android\Sdk\build-tools\[SDK version]/lib/dx.jar If they don&amp;rsquo;t exist, make symbolic links of d8.bat and d8.jar. You MUST enable AndroidDeviceProfileSelector and AndroidPermission plugins. Then execute [EngineFolder]/Engine/Extras/Android/SetupAndroid.* while UE4 and Android Studio are off.</description></item><item><title>Unreal basic</title><link>https://niiok.github.io/unreal/basic/</link><pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate><guid>https://niiok.github.io/unreal/basic/</guid><description>Unreal project If you want to study the API on your own; You should use that API as a user until you get used to it and read the header files. In every unreal code, they include &amp;ldquo;CoreMinimal.h&amp;rdquo; or &amp;ldquo;EngineMinimal.h&amp;rdquo; and those header files will be key to start studying.
Project hierarchy Config : project setting values. NEEDED-do not remove
Content : asset storage. NEEDED-do not remove</description></item></channel></rss>